user                 www-data;
pid                  /run/nginx.pid;
worker_processes     auto;
worker_rlimit_nofile 65535;

events {
  multi_accept       	on;
  worker_connections  	65535;  ## Default: 1024
}

http {

	charset              utf-8;
  sendfile             on;
  tcp_nopush           on;
  tcp_nodelay          on;
  server_tokens        off;
  log_not_found        off;
  types_hash_max_size  2048;
  client_max_body_size 16M;

	# MIME
  include              mime.types;
  default_type         application/octet-stream;

	# Logging
  access_log           /var/log/nginx/access.log;
  error_log            /var/log/nginx/error.log warn;

	# SSL
  #ssl_session_timeout  1d;
  #ssl_session_cache    shared:SSL:10m;
  #ssl_session_tickets  off;

	## Mozilla Intermediate configuration
  #ssl_protocols        TLSv1.2 TLSv1.3;
  #ssl_ciphers          ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

  # OCSP Stapling
  #ssl_stapling         on;
  #ssl_stapling_verify  on;
  #resolver             1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 #208.67.220.220 valid=60s;
  #resolver_timeout     2s;

	# Load configs
  #include              /etc/nginx/conf.d/*.conf;
  #include              /etc/nginx/sites-enabled/*;

  server {
		#listen 80;
	  #listen [::]:80;

		listen 443;
		listen [::]:443 ssl;

		ssl on;
		ssl_certificate /etc/ssl/certs/nginx-selfsigned.crt;
		ssl_certificate_key /etc/ssl/private/nginx-selfsigned.key;

		location ^~ /tomcat/ {
			rewrite ^/tomcat/(.*)$ /$1 break;

			proxy_pass  http://srv.tomcat.1:8080;
			proxy_pass_request_headers on;
		}

		location ^~ /weblogic/ {
		  rewrite ^/weblogic/(.*)$ /$1 break;

		  proxy_pass  http://srv.weblogic.1:8001/;
      proxy_ssl_server_name on;
		  proxy_pass_request_headers on;
		}

	  location ^~ /rotta-be1/ {
			rewrite ^/rotta-be1/(.*)$ /$1 break;

			proxy_pass  http://srv.weblogic.1:9002;
			proxy_pass_request_headers on;
		}

		location ^~ /rotta-be2/ {
			rewrite ^/rotta-be2/(.*)$ /$1 break;

			proxy_pass_request_headers on;
			proxy_pass  http://srv.weblogic.1:9002;
		}


	  location /app1 {
		  root /usr/share/nginx/html;
		  index  index.html index.htm;
	   }

		location /app2 {
		  root /usr/share/nginx/html;
		  index  index.html index.htm;
		}

		error_page   500 502 503 504  /50x.html;
		  location = /50x.html {
			root   /usr/share/nginx/html;
		}

		location ^~ /be-app1-log/ {
		  rewrite ^/(.*)$ /$1 break;

		  proxy_pass http://tail.app1:9001/be-app1-log/;
		  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		  proxy_set_header X-Real-IP $remote_addr;
		  proxy_set_header X-Scheme $scheme;
		  proxy_set_header Host $host;

		  # WebSocket support
		  proxy_http_version 1.1;
		  proxy_set_header Upgrade $http_upgrade;
		  proxy_set_header Connection "Upgrade";
		  proxy_set_header Host $http_host;

		  #proxy_set_header X-Real-IP $remote_addr;
		  add_header 'Access-Control-Allow-Origin' '*';
		  sub_filter 'action="/'  'action="/';
		  sub_filter 'href="/'  'href="/';
		  sub_filter 'src="/'  'src="/';
		  sub_filter_once off;
		}

	  location ^~ /be-app2-log/ {
  		rewrite ^/(.*)$ /$1 break;

  		proxy_pass http://tail.app2:9001/be-app2-log/;
  		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  		proxy_set_header X-Real-IP $remote_addr;
  		proxy_set_header X-Scheme $scheme;
  		proxy_set_header Host $host;

  		# WebSocket support
  		proxy_http_version 1.1;
  		proxy_set_header Upgrade $http_upgrade;
  		proxy_set_header Connection "Upgrade";
  		proxy_set_header Host $http_host;

  		proxy_set_header X-Real-IP $remote_addr;
  		add_header 'Access-Control-Allow-Origin' '*';
  		sub_filter 'action="/'  'action="/';
  		sub_filter 'href="/'  'href="/';
  		sub_filter 'src="/'  'src="/';
  		sub_filter_once off;
	  }


	  location ^~ /nginx-access-log/ {
  		rewrite ^/(.*)$ /$1 break;

  		proxy_pass http://tail.nginx.info:9001/nginx-access-log/;
  		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  		proxy_set_header X-Real-IP $remote_addr;
  		proxy_set_header X-Scheme $scheme;
  		proxy_set_header Host $host;

  		# WebSocket support
  		proxy_http_version 1.1;
  		proxy_set_header Upgrade $http_upgrade;
  		proxy_set_header Connection "Upgrade";
  		proxy_set_header Host $http_host;

  		proxy_set_header X-Real-IP $remote_addr;
  		add_header 'Access-Control-Allow-Origin' '*';
  		sub_filter 'action="/'  'action="/';
  		sub_filter 'href="/'  'href="/';
  		sub_filter 'src="/'  'src="/';
  		sub_filter_once off;
	  }

	 location ^~ /nginx-error-log/ {
  		rewrite ^/(.*)$ /$1 break;

  		proxy_pass http://tail.nginx.error:9001/nginx-error-log/;
  		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  		proxy_set_header X-Real-IP $remote_addr;
  		proxy_set_header X-Scheme $scheme;
  		proxy_set_header Host $host;

  		# WebSocket support
  		proxy_http_version 1.1;
  		proxy_set_header Upgrade $http_upgrade;
  		proxy_set_header Connection "Upgrade";
  		proxy_set_header Host $http_host;

  		proxy_set_header X-Real-IP $remote_addr;
  		add_header 'Access-Control-Allow-Origin' '*';
  		sub_filter 'action="/'  'action="/';
  		sub_filter 'href="/'  'href="/';
  		sub_filter 'src="/'  'src="/';
  		sub_filter_once off;
	  }

    location ^~ /sonar {
        rewrite ^/(.*)$ /$1 break;

        proxy_http_version 1.1;
        proxy_cache_bypass $http_upgrade;

        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_pass  http://srv.sonar:9000/sonar;
		}

	}

}
